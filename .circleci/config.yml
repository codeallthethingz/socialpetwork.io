# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.8.0

    working_directory: ~/socialpetwork.io

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_PUBLISH" > ~/socialpetwork.io/.npmrc
      - run:
          name: Publish package
          command: npm publish api/common --access public || true

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test

      - run: node ./node_modules/.bin/codecov -t $CODECOV_TOKEN


  deploy-to-now:
    working_directory: ~/socialpetwork.io
    docker:
      - image: circleci/node:10.8.0
    steps:
      - checkout

      - run:
          name: Install Now CLI
          command: sudo npm install --global --unsafe-perm now

      - run:
          name: Now deploy
          command: |
            now --token $ZEIT_TOKEN \
            -e DEBUG="socialpetwork*" \
            -e JWT_SECRET=$JWT_SECRET \
            -e MONGO_CONNECTION=$MONGO_CONNECTION_PRODUCTION \
            -e MONGO_WRITER_PASSWORD=$MONGO_WRITER_PASSWORD_PRODUCTION \
            -e GCP_STORAGE_CREDENTIALS=$GCP_STORAGE_CREDENTIALS
            now --token $ZEIT_TOKEN alias

      - run:
          name: Now redirect deploy
          command: |
            cd www-redirect
            now --token $ZEIT_TOKEN
            now --token $ZEIT_TOKEN alias
            
workflows:
  version: 2
  master:
    jobs:
      - build
      - deploy-to-now:
          filters:
            branches:
              only:
                - master
          requires:
            - build